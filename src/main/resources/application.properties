#########################################
############### DB CONFIG ###############
#########################################
quarkus.datasource.db-kind=oracle
quarkus.datasource.username=rm560944
quarkus.datasource.password=061105
quarkus.datasource.jdbc.url=jdbc:oracle:thin:@//oracle.fiap.com.br:1521/ORCL?oracle.net.CONNECT_TIMEOUT=10000&oracle.jdbc.ReadTimeout=10000

quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.dialect=org.hibernate.dialect.OracleDialect

quarkus.datasource.jdbc.min-size=2
quarkus.datasource.jdbc.max-size=10
quarkus.datasource.jdbc.idle-removal-interval=PT10M

quarkus.datasource.jdbc.validation-query=SELECT 1 FROM DUAL
quarkus.datasource.jdbc.test-on-borrow=true
quarkus.datasource.jdbc.test-on-return=false
quarkus.datasource.jdbc.test-while-idle=true
quarkus.datasource.jdbc.validation-query-timeout=5

#########################################
################ SWAGGER ################
#########################################
quarkus.smallrye-openapi.path=/humanlink/openapi
quarkus.swagger-ui.path=/humanlink/swagger-ui
quarkus.swagger-ui.always-include=true

#########################################
################ QUARKUS ################
#########################################
quarkus.http.root-path=/humanlink
quarkus.jvm.enable-preview=true

#########################################
################## CORS #################
#########################################

# Ativa o CORS globalmente
quarkus.http.cors.enabled=true 

# Permite requisições do frontend local e em produção
# Se seu Swagger UI estiver em outra porta ou domínio, adicione-o aqui.
# Ex: se o Swagger UI estiver em http://localhost:8080, adicione-o:
# quarkus.http.cors.origins=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8080
quarkus.http.cors.origins=http://localhost:3000,http://127.0.0.1:3000

# Métodos HTTP permitidos
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS

# Cabeçalhos permitidos que podem ser enviados na requisição CORS
quarkus.http.cors.headers=Accept,Authorization,Content-Type,X-API-key

# Cabeçalhos expostos (permite que o navegador leia esses headers da resposta)
quarkus.http.cors.exposed-headers=Authorization,Content-Type,X-API-key

# Permitir envio de cookies/autenticação.
# OBS: Se usar 'true', 'quarkus.http.cors.origins' NÃO PODE ser '*'.
# Como você já listou origens específicas, isso está correto.
quarkus.http.cors.access-control-allow-credentials=true

# Tempo de cache para requisições preflight OPTIONS (em segundos ou formato duração como '24H')
# O Quarkus aceita '24H', que é equivalente a 86400 segundos.
quarkus.http.cors.access-control-max-age=24H # CORREÇÃO: A propriedade correta é 'quarkus.http.cors.access-control-max-age', não apenas 'quarkus.http.cors.max-age'

#########################################
################ API KEY ################
#########################################
api.key=chave123
api.auth.enabled=true
# Thunder Client:
# Cabeçalho: X-API-key
# Valor: chave123